#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

../bf/all.hpp
bf/bloom_filter/a2.hpp
../bf/bf/bloom_filter/a2.hpp
bf/bloom_filter/basic.hpp
../bf/bf/bloom_filter/basic.hpp
bf/bloom_filter/bitwise.hpp
../bf/bf/bloom_filter/bitwise.hpp
bf/bloom_filter/counting.hpp
../bf/bf/bloom_filter/counting.hpp
bf/bloom_filter/stable.hpp
../bf/bf/bloom_filter/stable.hpp

../bf/bitvector.hpp
iterator
-
limits
-
string
-
vector
-

../bf/bloom_filter.hpp
bf/wrap.hpp
-

../bf/bloom_filter/a2.hpp
bf/bloom_filter/basic.hpp
-

../bf/bloom_filter/basic.hpp
random
-
bf/bitvector.hpp
-
bf/bloom_filter.hpp
-
bf/hash.hpp
-

../bf/bloom_filter/bitwise.hpp
bf/bloom_filter/basic.hpp
-

../bf/bloom_filter/counting.hpp
bf/counter_vector.hpp
-
bf/bloom_filter.hpp
-
bf/hash.hpp
-

../bf/bloom_filter/stable.hpp
random
-
bf/bloom_filter/counting.hpp
-

../bf/counter_vector.hpp
cstdint
-
vector
-
bf/bitvector.hpp
-

../bf/h3.hpp
limits
-
random
-

../bf/hash.hpp
functional
-
bf/h3.hpp
-
bf/object.hpp
-

../bf/object.hpp
type_traits
-

../bf/wrap.hpp
string
-
type_traits
-
vector
-
bf/object.hpp
-

../test/bf/util/error.h
string
-

../test/bf/util/trial.h
util/error.h
../test/bf/util/util/error.h
cassert
-

/home/ubuntu/libbf/test/bf/bf.cc
cassert
-
fstream
-
iomanip
-
iostream
-
memory
-
unordered_map
-
configuration.h
/home/ubuntu/libbf/test/bf/configuration.h
bf/all.hpp
/home/ubuntu/libbf/test/bf/bf/all.hpp

/home/ubuntu/libbf/test/bf/configuration.h
util/configuration.h
/home/ubuntu/libbf/test/bf/util/configuration.h

/home/ubuntu/libbf/test/bf/util/configuration.h
util/trial.h
/home/ubuntu/libbf/test/bf/util/util/trial.h
algorithm
-
cassert
-
cstring
-
fstream
-
iostream
-
map
-
sstream
-
string
-
vector
-

